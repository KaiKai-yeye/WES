# WES
整个流程可以大致分为以下几个阶段：
==================================================================================================================================================================================================================
 阶段一：测序数据的质控与预处理
==================================================================================================================================================================================================================
这个阶段的目的是确保我们用来分析的测序数据是高质量的，为后续的分析打下基础。

01_ln_s_...sh: 这个脚本通常用于创建原始测序数据（通常是FASTQ格式）的符号链接（Symbolic Link）。这样做的好处是不用复制庞大的原始文件，可以直接在工作目录中引用它们，方便管理。文件名中的数字（如250418）很可能是样本的编号。

02_FastQC.sh: 使用FastQC工具对原始测序数据进行质量评估。它会生成详细的报告，展示测序质量、GC含量、接头序列污染等情况。

03_TrimGalore.sh: 根据FastQC的报告，使用Trim Galore! 这类工具对数据进行清洗。主要工作是去除测序接头（Adapter）序列和低质量的碱基（Reads）。

==================================================================================================================================================================================================================
阶段二：序列比对与数据校正
==================================================================================================================================================================================================================
清洗过后的高质量测序数据需要比对到人类参考基因组上，确定每一条序列的来源位置。

04_Bwa_mem2.sh: 使用BWA-MEM2这个高效的比对工具，将处理过的测序读段（Reads）比对到参考基因组上，生成BAM格式的比对文件。

05_Markup.sh: 这个脚本的名称可能是Markdup.sh的误写或简写。它通常指的是使用Picard工具的MarkDuplicates功能，标记在PCR扩增过程中产生的重复序列，以避免它们在后续分析中引入偏差。

06_BQSR.sh: 全称为Base Quality Score Recalibration（碱基质量分数重校准）。这是GATK（Genome Analysis Toolkit）流程中的关键一步，用于校正测序仪在读取碱基时产生的系统性错误，提高碱基质量的准确性。

==================================================================================================================================================================================================================
阶段三：体细胞突变检测与过滤
==================================================================================================================================================================================================================
这是整个流程的核心部分，目的是找出相比于正常样本，肿瘤样本中特有的基因突变。这个流程看起来使用的是GATK Mutect2工具。

07_Pileup.sh: 生成Pileup文件，这是一种文本格式，汇总了每个基因组位置上的碱基信息。虽然Mutect2不直接需要它，但它可能用于其他目的或作为辅助质控。

08_Calculate_Contamination.sh: 利用7生成的pileup，肿瘤和正常对照配对计算样本间可能存在的交叉污染。这对于准确识别低频突变非常重要。

09_Mutect2.sh: 运行GATK Mutect2来检测体细胞的单核苷酸变异（SNV）和小的插入/缺失（Indel）。它可以处理肿瘤-正常配对样本，也可以在“仅肿瘤”（Tumor-only）模式下运行。（8、9可并行操作）

10_LearnReadOrientationModel.sh: 使用9输出的vcf学习并建立一个模型来识别由于DNA在样本处理（如福尔马林固定）过程中发生氧化损伤而导致的特定错误模式（方向性偏误），这是一种常见的假阳性来源。

11_FilterMutectCalls.sh: 使用前面8、9、10步骤生成的交叉污染率、方向性偏误模型等信息，对Mutect2找出的原始突变结果进行过滤，去除可能的假阳性位点。

12_FilterAlignmentArtifacts.sh: 进一步过滤由于序列比对错误而产生的假阳性突变。

13_Get_PASS.sh: 从经过多步过滤的VCF（Variant Call Format）文件中，筛选出所有通过了质控标准（在FILTER列标记为“PASS”）的、可信度高的突变位点。

==================================================================================================================================================================================================================
阶段四：突变注释与下游分析
==================================================================================================================================================================================================================
找到了可靠的突变列表后，需要对这些突变进行功能注释，并进行更深入的生物学分析。

14_ANNOVAR.sh: 使用ANNOVAR这款强大的工具对筛选出的突变进行功能注释。[6][7] 注释信息包括：突变位于哪个基因上、是导致氨基酸改变的错义突变还是无义突变、在正常人群中的频率、在COSMIC等癌症数据库中是否已有报道等。

15_Rename.sh: 可能是一个辅助脚本，用于重命名文件，使结果文件更有条理。

16_Building_Phylogenetic_Trees.sh: 这是一个非常有意思的下游分析。它表明该研究可能涉及多个肿瘤样本（例如，来自同一病人的原发灶和转移灶，或不同时间点的样本）。通过分析这些样本共有和独有的突变，可以构建系统发育树（Phylogenetic Tree），来推断肿瘤的演化历史、克隆结构以及转移路径。

WES_workflow.sh: 这很可能是一个总控脚本（Master Script），它会按照正确的顺序依次调用上述1到16号脚本，实现整个分析流程的自动化。
